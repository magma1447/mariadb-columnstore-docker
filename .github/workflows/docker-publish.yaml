name: Build and Publish Docker Image

on:
  push:
    branches: [ master ]
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  LATEST_VERSION: "11.8.2"

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    strategy:
      matrix:
        include:
          - version: "11.1.1"
            repo_type: "archive"
          - version: "11.1.2"
            repo_type: "archive"
          - version: "11.1.3"
            repo_type: "archive"
          - version: "11.1.4"
            repo_type: "archive"
          - version: "11.1.5"
            repo_type: "archive"
          - version: "11.1.6"
            repo_type: "archive"
          - version: "11.4.7"
            repo_type: "rpm"
          - version: "11.8.2"
            repo_type: "rpm"

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Create empty .secrets file
      run: touch .secrets

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=raw,value=${{ matrix.version }}
          type=raw,value=latest,enable=${{ matrix.version == env.LATEST_VERSION }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        build-args: |
          ENTERPRISE=false
          RELEASE_NUMBER=${{ matrix.version }}
          REPO_TYPE=${{ matrix.repo_type }}
          DEV=false
          MCS_REPO=
          MCS_BASEURL=
          FDB_REPO=
          FDB_BASEURL=
          CMAPI_REPO=
          CMAPI_BASEURL=

